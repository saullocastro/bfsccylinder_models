name: Upload Python Package

on:
  release:
    types: [created]

jobs:     
  deploy:
    strategy:
      matrix:
        runs-on: [windows-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on:  ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build Windows Python wheels
      if: matrix.runs-on == 'windows-latest'
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish Windows Python wheels
      if: matrix.runs-on == 'windows-latest'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*.whl
    - name: Build manylinux Python wheels
      if: matrix.runs-on == 'ubuntu-latest' && matrix.python-version == 3.8
      uses: RalfG/python-wheels-manylinux-build@v0.3.1-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m'
        build-requirements: 'pip cython numpy scipy setuptools wheel twine'
    - name: Publish manylinux Python wheels
      if: matrix.runs-on == 'ubuntu-latest' && matrix.python-version == 3.8
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*-manylinux*.whl
